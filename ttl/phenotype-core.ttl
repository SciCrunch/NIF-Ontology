@prefix : <file:///ERROR/EMPTY/PREFIX/BANNED/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix ILX: <http://uri.interlex.org/base/ilx_> .
@prefix ILXREPLACE: <http://ILXREPLACE.org/> .
@prefix ilxtr: <http://uri.interlex.org/tgbugs/uris/readable/> .
@prefix NCBITaxon: <http://purl.obolibrary.org/obo/NCBITaxon_> .
@prefix NIFEXT: <http://uri.neuinfo.org/nif/nifstd/nifext_> .
@prefix NIFRID: <http://uri.neuinfo.org/nif/nifstd/readable/> .
@prefix NLXCELL: <http://uri.neuinfo.org/nif/nifstd/nlx_cell_> .
@prefix nsu: <http://www.FIXME.org/nsupper#> .
@prefix oboInOwl: <http://www.geneontology.org/formats/oboInOwl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix PR: <http://purl.obolibrary.org/obo/PR_> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix SAO: <http://uri.neuinfo.org/nif/nifstd/sao> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix TEMP: <http://uri.interlex.org/temp/uris/> .
@prefix UBERON: <http://purl.obolibrary.org/obo/UBERON_> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ontology.neuinfo.org/NIF/ttl/phenotype-core.ttl> a owl:Ontology ;
    rdfs:label "NIF Phenotype Core",
        "NIF Phenotype core" ;
    rdfs:comment "This is the core set of predicates used to model phenotypes and the parent class for phenotypes." ;
    owl:versionInfo "2018-06-12" .

### Object Properties

ilxtr:hasAxonLocatedIn a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasAxonLocatedIn" ;
    rdfs:subPropertyOf ilxtr:hasLocationPhenotype .

ilxtr:hasCircuitRolePhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasCircuitRolePhenotype" ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasDendriteLocatedIn a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasDendriteLocatedIn" ;
    rdfs:subPropertyOf ilxtr:hasLocationPhenotype .

ilxtr:hasDendriteMorphologicalPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasDendriteMorphologicalPhenotype" ;
    skos:definition "Expresses a relationship between a neuron and a dendrite phenotype. This should be used when a neuron type is described by the morphology of its dendrites." ;
    rdfs:subPropertyOf ilxtr:hasMorphologicalPhenotype .

ilxtr:hasDevelopmentalOrigin a owl:ObjectProperty ;
    rdfs:label "hasDevelopmentalOrigin" ;
    skos:definition "Expresses a relationship between a neuron type and a developmental cell population. This should be used when a neuron develops from an identified developmental cell population." .

ilxtr:hasElectrophysiologicalPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasElectrophysiologicalPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and an electrophysiological phenotype concept. This should be used when a neuron type is described using a high level electrophysiological concept class." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasExperimentalPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasExperimentalPhenotype" ;
    skos:definition "Expresses a relationship between a neuron and an experimental condition. This should be used when a neuron type is described by some experimental condition or functional designation." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype ;
    rdfs:comment "This needs a better name. It is clear what it means when you see examples of the usage." .

ilxtr:hasExpressionPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasExpressionPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and a gene type. This should be used for detection of RNAs that code for proteins which may or may not have been detected directly." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasInstanceInSpecies a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasInstanceInSpecies" ;
    skos:definition "Expresses a relationship between a neuron type and a species. This should be used when a neuron type has been observed in a specific species." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasLayerLocationPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasLayerLocationPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and a laminar brain region." ;
    rdfs:subPropertyOf ilxtr:hasLocationPhenotype ;
    rdfs:comment "May need hasSomaLayerLocation or something, do we really even need this?? if axioms are missing in parcellation schemes and uberon then it should be easy enough to add them, or at least we won't get disjointness issues because layers of cortex are orthogonal to parts of cortex (eg) and thus we shouldnt get reasoning errors" .

ilxtr:hasLocationPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasLocationPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and a brain region or brain parcel. This is a superProperty and should not be used directly." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasMorphologicalPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasMorphologicalPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and a morphological phenotype concept. This should be used when a neuron type is described using a high level morphological concept class." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype .

ilxtr:hasNeurotransmitterPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasNeurotransmitterPhenotype" ;
    rdfs:subPropertyOf ilxtr:hasExpressionPhenotype ;
    rdfs:comment "not entirely sure if we need this one" .

ilxtr:hasNucleicAcidExpressionPhenotype a owl:ObjectProperty ;
    rdfs:label "hasNucleicAcidExpressionPhenotype" .

ilxtr:hasPhenotype a owl:AsymmetricProperty,
        owl:FunctionalProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasPhenotype" ;
    owl:inverseOf ilxtr:phenotypeOf .

ilxtr:hasPresynapticTerminalsIn a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasPresynapticTerminalsIn" ;
    rdfs:comment "projectsTo?" .

ilxtr:hasProjectionPhenotype a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasProjectionPhenotype" ;
    skos:definition "Expresses a relationship between a neuron type and a brain region that said neuron type sends axons to." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype ;
    rdfs:comment "this might be clearer than hasCircuitRole but might confuse with projectsTo or the like, excitatory/inhibitory shouldn't be handled here? The way that projection vs intrinsic is modelled relates whether axons leave the brain region that contains the soma or not, this is not fully modelled at the moment" .

ilxtr:hasProteinExpressionPhenotype a owl:ObjectProperty ;
    rdfs:label "hasProteinExpressionPhenotype" .

ilxtr:hasSmallMoleculeExpressionPhenotype a owl:ObjectProperty ;
    rdfs:label "hasSmallMoleculeExpressionPhenotype" .

ilxtr:hasSomaLocatedIn a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasSomaLocatedIn" ;
    rdfs:subPropertyOf ilxtr:hasLocationPhenotype .

ilxtr:hasTaxonRank a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "hasTaxonRank" ;
    skos:definition "Expresses a relationship between a neuron type and a taxon. This should be used when a neuron type is thought to have been present in the last common ancestor of the taxon." ;
    rdfs:subPropertyOf ilxtr:hasPhenotype ;
    rdfs:comment "isAncestralInTaxon (because convergent evolution is SOOO likelyâ€¦)" .

ilxtr:phenotypeCooccuresWith a owl:ObjectProperty ;
    rdfs:label "phenotypeCooccuresWith" ;
    skos:definition "Expresses a relationship between a phenotype and a phenotype. This should be used when two phenotypes commonly cooccure." ;
    rdfs:comment "this is not the right way to pull this off, need something akin to disjointness" .

ilxtr:phenotypeObservedInBrainRegion a owl:ObjectProperty ;
    rdfs:label "phenotypeObservedInBrainRegion" ;
    skos:definition "Expresses a relationship between a phenotype and a brain region. This should be used when a neuron phenotype is observed in specific brain regions." ;
    rdfs:comment "existential not universal" .

ilxtr:phenotypeOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "phenotypeOf" .

### Classes

ilxtr:Phenotype a owl:Class ;
    rdfs:label "Phenotype" ;
    skos:definition "A Phenotype is a binary property of a biological entity. Phenotypes are derived from measurements made on the subject of interest. While Phenotype is not currently placed within the BFO hierarchy, if we were to place it, it would fall under BFO:0000016 -> disposition, since these phenotypes are contingent on the experimental conditions under which measurements were made and are NOT qualities. For consideration: in theory this would mean that disjointness does not make sense, even for things that would seem to be obviously disjoint such as Accomodating and Non-Accomodating. However, this information can still be captured on a subject by subject basis by asserting that for this particular entity, coocurrance of phenotypes is not possible. This still leaves the question of whether the class of biological entities that correspond to the bag of phenotypes is implicitly bounded/limited only to the extrinsic and unspecified experimental conditions, some of which are not and cannot be included in a bag of phenotypes. The way to deal with this when we want to include 2 'same time' disjoint phenotypes, is to use a logical phenotype to wrap them with an auxiliary variable that we think accounts for the difference." .

### Serialized using the pyontutils deterministic serializer v1.1.4
